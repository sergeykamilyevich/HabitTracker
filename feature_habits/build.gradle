plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.habittracker.feature_habits'
    compileSdk 33

    defaultConfig {
        minSdk 26
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
//            useJUnit()
        }
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

}

apply from: "$project.rootDir/scripts/deps_versions.gradle"
dependencies {

    //Modules
    implementation project(path: ':ui_kit')
    implementation project(path: ':feature_habit_filter')
    implementation project(path: ':cloud_sync')
    implementation project(path: ':core')
    implementation project(path: ':network')
    implementation project(path: ':db')
    implementation project(path: ':viewmodels')

    //Core
    implementation android_core
    implementation appcompat

    //UI
    implementation fragment
    implementation material
    implementation constraintlayout
    implementation viewpager2

    //Kotlin coroutines
    implementation kotlin_coroutines.values()

    //Lifecycle
    implementation lifecycle.values()

    //Navigation
    implementation navigation.values()

    //DI
    implementation dagger_impl.values()
    kapt dagger_kapt

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //Tests
    testImplementation tests.values()
    testImplementation dagger_impl.values()
}